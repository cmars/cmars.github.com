<?xml version="1.0" encoding="utf-8"?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>cmars blog</title><link>https://cmars.github.com/</link><description></description><atom:link href="https://cmars.github.com/feeds/all.rss.xml" rel="self"></atom:link><lastBuildDate>Sun, 24 Mar 2013 20:00:00 -0500</lastBuildDate><item><title>Hockeypuck article in LWN</title><link>https://cmars.github.com/hockeypuck-article-in-lwn.html</link><description>&lt;p&gt;&lt;a class="reference external" href="https://lwn.net/Articles/542577/"&gt;Excellent LWN article&lt;/a&gt; of my SCALE 11x &lt;a class="reference external" href="https://docs.google.com/presentation/d/1-oVBAVgUZwXH4dB4s6sFD42JsbkEkcMPvbIEH3tZXW0/pub?start=false&amp;amp;loop=false&amp;amp;delayms=3000"&gt;Hockeypuck presentation&lt;/a&gt; by Nathan Willis.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Casey Marshall</dc:creator><pubDate>Sun, 24 Mar 2013 20:00:00 -0500</pubDate><guid>tag:https://cmars.github.com,2013-03-24:hockeypuck-article-in-lwn.html</guid></item><item><title>Improved fulltext search in Hockeypuck</title><link>https://cmars.github.com/improved-fulltext-search-in-hockeypuck.html</link><description>&lt;p&gt;I've fixed a &lt;a class="reference external" href="https://bugs.launchpad.net/hockeypuck/+bug/1108416"&gt;full-text search issue&lt;/a&gt; in Hockeypuck and deployed to &lt;a class="reference external" href="http://keyserver.gazzang.net"&gt;http://keyserver.gazzang.net&lt;/a&gt;. Name search is tokenized and case-insensitive, so searches like &lt;a class="reference external" href="http://keyserver.gazzang.net/pks/lookup?op=index&amp;amp;search=casey+marshall"&gt;'casey marshall'&lt;/a&gt; and &lt;a class="reference external" href="http://keyserver.gazzang.net/pks/lookup?op=index&amp;amp;search=Marshall%20Casey"&gt;'Marshall Casey'&lt;/a&gt; will now work.&lt;/p&gt;
&lt;p&gt;The fix was easy enough to make and test on a local MongoDB instance, but what about the 3M+ keys on keyserver.gazzang.net? The fulltext search is implemented on MongoDB as an indexed array. Each element of this array would need to be lowercased. And, I improved the tokenization, so really, it would need to be rewritten.&lt;/p&gt;
&lt;p&gt;I made a &lt;a class="reference external" href="https://bazaar.launchpad.net/~hockeypuck/hockeypuck/trunk/view/head:/instroot/usr/share/hockeypuck-mgo/scripts/fix-keywords.js"&gt;little MongoDB Javascript&lt;/a&gt; patch script that modifies an existing Hockeypuck database with comparable changes, kicked it off late last night. It was done in the morning, so I know it took less than 10 hours. Not bad, Mongo.&lt;/p&gt;
&lt;p&gt;I've decided that SKS reconciliation is probably too much work to ship in February with other things I've got going on. I'm going to address smaller issues that have come up in the meantime to deliver a solid &lt;a class="reference external" href="https://launchpad.net/hockeypuck/+milestone/0.9"&gt;0.9 release&lt;/a&gt; for Raring Ringtail.&lt;/p&gt;
&lt;p&gt;SKS reconciliation will get a nice, solid 1.0 release number. I'm thinking late March/early April at this point.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Casey Marshall</dc:creator><pubDate>Mon, 11 Feb 2013 16:30:00 -0600</pubDate><guid>tag:https://cmars.github.com,2013-02-11:improved-fulltext-search-in-hockeypuck.html</guid></item><item><title>Now with GnuPG signage</title><link>https://cmars.github.com/now-with-gnupg-signage.html</link><description>&lt;p&gt;When I publish my blog to Github, I create new post files, make whatever changes, and then I use a Makefile that the pelican-quickstart generated for me: &lt;tt class="docutils literal"&gt;make html serve&lt;/tt&gt; to compile the site and view on localhost:8000, &lt;tt class="docutils literal"&gt;make github&lt;/tt&gt; to publish on Github.&lt;/p&gt;
&lt;p&gt;This evening I added &lt;a class="reference external" href="http://www.gnupg.org/"&gt;GnuPG&lt;/a&gt; signatures to all my posts. Each HTML page now has a detached signature. So, for example, to get the detached signature for this page, you'd fetch &lt;a class="reference external" href="http://cmars.github.com/now-with-gnupg-signage.html.sig"&gt;http://cmars.github.com/now-with-gnupg-signage.html.sig&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Right now, it's not very easy to verify these signatures. Your browser doesn't know how to check them yet. You'd have to save them separately and use &lt;a class="reference external" href="http://www.gnupg.org/"&gt;GnuPG&lt;/a&gt; to verify them. Save this HTML page, then save the .sig file, then do &lt;tt class="docutils literal"&gt;gpg &lt;span class="pre"&gt;--verify&lt;/span&gt; &lt;span class="pre"&gt;now-with-gnupg-signage.html.sig&lt;/span&gt; &lt;span class="pre"&gt;now-with-gnupg-signage.html&lt;/span&gt;&lt;/tt&gt;. I don't expect anyone to go to all this trouble under normal circumstances.&lt;/p&gt;
&lt;p&gt;Still, I think PGP-signing content is interesting and profound and relevant as the web and new applications for it evolve. Take this Github hosting arrangement I have. You're reading a blog that is hosted in what is essentially a &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Distributed_revision_control"&gt;distributed version control&lt;/a&gt; system (DVCS), &lt;a class="reference external" href="http://git-scm.com/"&gt;git&lt;/a&gt;. With &lt;a class="reference external" href="http://git-scm.com/"&gt;git&lt;/a&gt;, anyone can clone this entire site and host it themselves. You could pull my blog updates with git directly and view them locally, instead of reading them off of Github's web servers (like you're probably doing now).&lt;/p&gt;
&lt;p&gt;Now, let's imagine there is a distributed social networking platform -- like Facebook or Twitter, but instead of being hosted and controlled by a single company, it is a mesh of content that gets synchronized between your devices. Perhaps you are tired of Facebook privacy changes, &lt;a class="reference external" href="http://arstechnica.com/business/2013/02/facebook-may-create-a-passive-location-logging-app/"&gt;location tracking&lt;/a&gt;, etc. and you would like to share with your family and friends without creepy corporations harvesting and selling your data and habits. Fair enough... let's say the problem of copying all these baby and kitty pictures, funny links, meetups, drama and jokes all around are technically solved and you can share content like this. Let's even assume that the app is cute enough and easy enough to use, that mainstream users adopt it. You would have this problem of authenticity -- how can you know who really sent what? If such a system became popular enough to have some trusting users, someone would figure out how to 'shop a photo in the application's storage, and create some shenanigans. This creates lulz for some, hurt feelings for others, distrust for all, and pretty soon your family and friends go back to Facebook.&lt;/p&gt;
&lt;p&gt;But, if this &amp;quot;sharing app&amp;quot; made cryptographic signatures -- signatures much like the ones I've created on my posts -- and the app could check them -- well, then you could prevent this kind of tampering.&lt;/p&gt;
&lt;p&gt;This is how I envision making PGP more usable. Keys are exchanged in person, typically on mobile devices, very easily. Content is signed, optionally encrypted, and no one gets to snoop, forge content, or exploit people going about their daily lives. Some ideas I have, I want to make money with, but this, I believe it should just &lt;em&gt;exist&lt;/em&gt;, whether or not I profit from it. It is more of creating a world in which I want to live.&lt;/p&gt;
&lt;p&gt;Yeah, they're a pain in the ass to check right now, but my blog has digital signatures. Copying not only permitted, but encouraged.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Casey Marshall</dc:creator><pubDate>Sat, 09 Feb 2013 19:26:00 -0600</pubDate><guid>tag:https://cmars.github.com,2013-02-09:now-with-gnupg-signage.html</guid></item><item><title>Hockeypuck in Ubuntu Raring</title><link>https://cmars.github.com/hockeypuck-in-ubuntu-raring.html</link><description>&lt;p&gt;My &lt;a class="reference external" href="https://launchpad.net/hockeypuck"&gt;Hockeypuck&lt;/a&gt; project was &lt;a class="reference external" href="https://launchpad.net/ubuntu/raring/+source/hockeypuck"&gt;accepted into Ubuntu Raring&lt;/a&gt; earlier this week. Thanks &lt;a class="reference external" href="http://blog.dustinkirkland.com"&gt;Dustin&lt;/a&gt; for sponsoring!&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://launchpad.net/hockeypuck"&gt;Hockeypuck&lt;/a&gt; is a &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Pretty_Good_Privacy"&gt;PGP&lt;/a&gt; public key server -- kind of like an open directory
or phonebook for looking up someone's key to verify their digital signatures or encrypt e-mail messages or other files to them. For example, with &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Pretty_Good_Privacy"&gt;PGP&lt;/a&gt;, you
could ask a keyserver the public key for my email address.&lt;/p&gt;
&lt;p&gt;(The name &amp;quot;PGP&amp;quot; was trademarked at some point, so we should really say &amp;quot;OpenPGP&amp;quot;, because that is the name of the open standard. And GnuPG, or &amp;quot;GPG&amp;quot;, is the free and open-source program that you'll probably end up using to &amp;quot;do PGP&amp;quot;.)&lt;/p&gt;
&lt;p&gt;A search for my key in &lt;a class="reference external" href="https://launchpad.net/hockeypuck"&gt;Hockeypuck&lt;/a&gt; looks like this:
&lt;a class="reference external" href="https://hockeypuck.gazzang.net/pks/lookup?op=vindex&amp;amp;search=0x44A2D1DB"&gt;https://hockeypuck.gazzang.net/pks/lookup?op=vindex&amp;amp;search=0x44A2D1DB&lt;/a&gt;. On other keyservers, such as SKS, it looks like this: &lt;a class="reference external" href="http://keyserver.ubuntu.com/pks/lookup?op=vindex&amp;amp;search=0x44A2D1DB"&gt;http://keyserver.ubuntu.com/pks/lookup?op=vindex&amp;amp;search=0x44A2D1DB&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Before the public key fingerprint linked above, you need to confirm that the key is actually owned by me. There are many ways to do this, but one of the simplest would be to send me a test encrypted mail, and then confirm it with me through some other means (a second factor). Asking me in-person or via phone call to confirm the contents (a good joke would work) would give you confidence that I am the owner of the key.&lt;/p&gt;
&lt;p&gt;It might be surprising to find that there is no approval process for submitting a key to a public key server like &lt;a class="reference external" href="https://launchpad.net/hockeypuck"&gt;Hockeypuck&lt;/a&gt; -- anyone may do it, anytime. In fact, anyone may register any name or email address they want! There is no account to create, no password to log on. The key itself contains some proof that whomever made it can decrypt messages, but that's it. Keys are authenticated by other keys vouching for their authenticity -- by digitally signing them. However, there is some certainty you can depend on. One cannot forge the fingerprint (a unique string) of a key or signatures made by a key -- that is protected by the strong encryption. Once a key is created, only the owner of the private part of that key can modify it, or sign with it.&lt;/p&gt;
&lt;p&gt;It seems dangerous and reckless that anyone can register a key, using whatever name and address. Yet at the same time, it is refreshing in this age of Facebook and other corporate curated social networks. Cryptographically-protected online communications are available to those who can wield it responsibly. When communicating and collaborating online, whom else could people from all over the world really trust, but... each other?&lt;/p&gt;
&lt;p&gt;The global pool of public keys is fascinating. There are over 4GB of public keys and signatures that have been created and shared. Some of the names and addresses appear personal, others corporate, government, academic or military. There are mysterious pseudonyms, signed snippets of identifiers that aren't even email addresses. Any of them could be real or forgeries, without being introduced to their owners through some other means. Some may be active, others long abandoned.&lt;/p&gt;
&lt;p&gt;It is like what you might get if Wikipedia made a cryptographic contact list.&lt;/p&gt;
&lt;p&gt;Besides email, OpenPGP is used in many other applications.
The software packages in a Linux distribution such as Ubuntu or
RedHat are certified as officially packaged by their authors or maintainers using
these same type of signatures. When you update packages on such a Linux installation, a PGP keyserver would be queried to obtain the keys used to sign these packages. What else could a vast global, distributed volunteer development effort use to certify software packages?&lt;/p&gt;
&lt;p&gt;The significance of software such as &lt;a class="reference external" href="https://launchpad.net/hockeypuck"&gt;Hockeypuck&lt;/a&gt; going into
Ubuntu is that it has been accepted into the community-curated
collection of software known as &amp;quot;Ubuntu&amp;quot; -- meaning that it is
considered relevant enough, and of sufficient quality to become a part
of this collection. As a PGP keyserver, &lt;a class="reference external" href="https://launchpad.net/hockeypuck"&gt;Hockeypuck&lt;/a&gt; may one day support this community's collaboration, through the distribution of public keys. That would be an honor :)&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Casey Marshall</dc:creator><pubDate>Fri, 08 Feb 2013 18:00:00 -0600</pubDate><guid>tag:https://cmars.github.com,2013-02-08:hockeypuck-in-ubuntu-raring.html</guid></item><item><title>first post</title><link>https://cmars.github.com/first-post.html</link><description>&lt;p&gt;This is a first post made with Pelican. I wanted a blogging platform that:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Works with Github pages. So, a static-compiled blog.&lt;/li&gt;
&lt;li&gt;Is written in a language I'd feel comfortable hacking on (Golang or Python).&lt;/li&gt;
&lt;li&gt;Mostly just works and doesn't get in the way.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I settled on &lt;a class="reference external" href="http://getpelican.com"&gt;Pelican&lt;/a&gt;. So far, I'm liking it quite a bit. I had to tweak the Makefile a bit to get the &lt;tt class="docutils literal"&gt;make github&lt;/tt&gt; target to work for a personal Github page. This blog's &lt;a class="reference external" href="https://github.com/cmars/cmars.github.com/tree/pelican"&gt;pelican branch in Github&lt;/a&gt; might be helpful if you're trying to get something similar working.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Casey Marshall</dc:creator><pubDate>Fri, 08 Feb 2013 11:00:00 -0600</pubDate><guid>tag:https://cmars.github.com,2013-02-08:first-post.html</guid></item></channel></rss>